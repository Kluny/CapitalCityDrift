/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package capitaldriftqualification;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Shannon
 */
public class GUI extends javax.swing.JFrame {

    private CapD theMainEvent;
    private Racecar firstDriver;
    private Racecar secondDriver;
    private ArrayList<JComboBox> scoreBoxes1 = new ArrayList<JComboBox>();
    private ArrayList<JComboBox> scoreBoxes2 = new ArrayList<JComboBox>();

    private Score aScore;
    private Score bScore;
    
    private int driver1no;
    private int driver2no;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        scoreBoxes1.add(firstJudgeBox1);
        scoreBoxes1.add(secondJudgeBox1);
        scoreBoxes1.add(thirdJudgeBox1);

        scoreBoxes2.add(firstJudgeBox2);
        scoreBoxes2.add(secondJudgeBox2);
        scoreBoxes2.add(thirdJudgeBox2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        eventDataTab = new javax.swing.JPanel();
        maxDriversLabel = new javax.swing.JLabel();
        maxDriversBox = new javax.swing.JTextField();
        StartButton = new javax.swing.JButton();
        displayMaxDriversLabel = new javax.swing.JLabel();
        eventRunningLabel = new javax.swing.JLabel();
        changeMaxDriversButton = new javax.swing.JButton();
        registrationTab = new javax.swing.JPanel();
        driverNameLabel = new javax.swing.JLabel();
        driverNameBox = new javax.swing.JTextField();
        carInfoLabel = new javax.swing.JLabel();
        carInfoBox = new javax.swing.JTextField();
        driverNoLabel = new javax.swing.JLabel();
        driverNoBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        driverListTextPanel = new javax.swing.JList();
        driverListLabel = new javax.swing.JLabel();
        removeDriverButton = new javax.swing.JButton();
        editDriverButton = new javax.swing.JButton();
        addDriverButton = new javax.swing.JButton();
        scoringTab = new javax.swing.JPanel();
        addLapScoreButton1 = new javax.swing.JButton();
        firstDriverButton = new javax.swing.JButton();
        firstDriverBox = new javax.swing.JTextField();
        firstDriverLabel = new javax.swing.JLabel();
        firstJudgeBox1 = new javax.swing.JComboBox();
        secondJudgeBox1 = new javax.swing.JComboBox();
        thirdJudgeBox1 = new javax.swing.JComboBox();
        firstTotalSoFarLabel = new javax.swing.JLabel();
        firstJudgeLabel1 = new javax.swing.JLabel();
        secondJudgeLabel1 = new javax.swing.JLabel();
        thirdJudgeLabel1 = new javax.swing.JLabel();
        secondDriverLabel = new javax.swing.JLabel();
        firstJudgeLabel2 = new javax.swing.JLabel();
        secondJudgeLabel2 = new javax.swing.JLabel();
        thirdJudgeLabel2 = new javax.swing.JLabel();
        firstJudgeBox2 = new javax.swing.JComboBox();
        secondJudgeBox2 = new javax.swing.JComboBox();
        thirdJudgeBox2 = new javax.swing.JComboBox();
        secondDriverButton = new javax.swing.JButton();
        secondDriverBox = new javax.swing.JTextField();
        secondTotalSoFarLabel = new javax.swing.JLabel();
        addLapScoreButton2 = new javax.swing.JButton();
        qualifiedDriversTab = new javax.swing.JPanel();
        qualifiedDriversScroller = new javax.swing.JScrollPane();
        qualifiedDriversOutput = new javax.swing.JTextPane();
        getQualifiedDriversButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabs.setBackground(new java.awt.Color(153, 153, 153));
        tabs.setName("eventData");

        eventDataTab.setBackground(new java.awt.Color(153, 153, 153));
        eventDataTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        maxDriversLabel.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        maxDriversLabel.setText("Maximum Drivers");
        eventDataTab.add(maxDriversLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 170, -1, -1));

        maxDriversBox.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        maxDriversBox.setText("40");
        maxDriversBox.setDragEnabled(false);
        maxDriversBox.setName("maxDriversBox");
        maxDriversBox.setPreferredSize(new java.awt.Dimension(25, 50));
        maxDriversBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxDriversBoxActionPerformed(evt);
            }
        });
        eventDataTab.add(maxDriversBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 166, 59, -1));

        StartButton.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        StartButton.setText("Start Event");
        StartButton.setPreferredSize(new java.awt.Dimension(138, 60));
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });
        eventDataTab.add(StartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 304, 232, 69));
        eventDataTab.add(displayMaxDriversLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 20, 20));
        eventDataTab.add(eventRunningLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 304, -1, -1));

        changeMaxDriversButton.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        changeMaxDriversButton.setText("Change");
        changeMaxDriversButton.setEnabled(false);
        changeMaxDriversButton.setPreferredSize(new java.awt.Dimension(109, 60));
        changeMaxDriversButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeMaxDriversButtonActionPerformed(evt);
            }
        });
        eventDataTab.add(changeMaxDriversButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 157, 173, 71));

        tabs.addTab("Event Data", eventDataTab);

        registrationTab.setBackground(new java.awt.Color(153, 153, 153));
        registrationTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        driverNameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        driverNameLabel.setText("Driver Name");
        registrationTab.add(driverNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 64, -1, -1));

        driverNameBox.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        driverNameBox.setName("driverBox");
        driverNameBox.setPreferredSize(new java.awt.Dimension(166, 50));
        driverNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driverNameBoxActionPerformed(evt);
            }
        });
        registrationTab.add(driverNameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 64, 171, 57));

        carInfoLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        carInfoLabel.setText("Car Info");
        registrationTab.add(carInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 139, -1, -1));

        carInfoBox.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        carInfoBox.setName("modelBox");
        carInfoBox.setPreferredSize(new java.awt.Dimension(171, 50));
        carInfoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carInfoBoxActionPerformed(evt);
            }
        });
        registrationTab.add(carInfoBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 139, -1, 61));

        driverNoLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        driverNoLabel.setText("Driver Number");
        registrationTab.add(driverNoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 218, -1, -1));

        driverNoBox.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        driverNoBox.setMinimumSize(new java.awt.Dimension(14, 30));
        driverNoBox.setName("driverNumberBox");
        driverNoBox.setPreferredSize(new java.awt.Dimension(187, 50));
        driverNoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driverNoBoxActionPerformed(evt);
            }
        });
        registrationTab.add(driverNoBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 218, 171, 60));

        driverListTextPanel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        driverListTextPanel.setFocusable(false);
        jScrollPane1.setViewportView(driverListTextPanel);

        registrationTab.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 64, 384, 388));

        driverListLabel.setText("Driver List");
        registrationTab.add(driverListLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 30, -1, -1));

        removeDriverButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        removeDriverButton.setText("Remove Driver");
        removeDriverButton.setEnabled(false);
        removeDriverButton.setFocusable(false);
        removeDriverButton.setPreferredSize(new java.awt.Dimension(135, 50));
        removeDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDriverButtonActionPerformed(evt);
            }
        });
        registrationTab.add(removeDriverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 148, -1));

        editDriverButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editDriverButton.setText("Edit Driver");
        editDriverButton.setEnabled(false);
        editDriverButton.setFocusable(false);
        editDriverButton.setPreferredSize(new java.awt.Dimension(110, 50));
        editDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDriverButtonActionPerformed(evt);
            }
        });
        registrationTab.add(editDriverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 520, -1, -1));

        addDriverButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        addDriverButton.setText("Add Driver");
        addDriverButton.setEnabled(false);
        addDriverButton.setName("addDriverButton");
        addDriverButton.setPreferredSize(new java.awt.Dimension(135, 50));
        addDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDriverButtonActionPerformed(evt);
            }
        });
        registrationTab.add(addDriverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 320, 220, -1));

        tabs.addTab("Registration", registrationTab);

        scoringTab.setBackground(new java.awt.Color(153, 153, 153));
        scoringTab.setPreferredSize(new java.awt.Dimension(1270, 500));
        scoringTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addLapScoreButton1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        addLapScoreButton1.setText("Add Lap Score");
        addLapScoreButton1.setEnabled(false);
        addLapScoreButton1.setPreferredSize(new java.awt.Dimension(168, 50));
        addLapScoreButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLapScoreButton1ActionPerformed(evt);
            }
        });
        scoringTab.add(addLapScoreButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 391, -1, -1));

        firstDriverButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        firstDriverButton.setText("Load Driver");
        firstDriverButton.setEnabled(false);
        firstDriverButton.setFocusable(false);
        firstDriverButton.setPreferredSize(new java.awt.Dimension(166, 50));
        firstDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstDriverButtonActionPerformed(evt);
            }
        });
        scoringTab.add(firstDriverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 443, 237, 53));

        firstDriverBox.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        firstDriverBox.setPreferredSize(new java.awt.Dimension(179, 40));
        firstDriverBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstDriverBoxActionPerformed(evt);
            }
        });
        scoringTab.add(firstDriverBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 441, 75, 50));

        firstDriverLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        firstDriverLabel.setText("Driver");
        scoringTab.add(firstDriverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 35, -1, -1));

        firstJudgeBox1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        firstJudgeBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        firstJudgeBox1.setEnabled(false);
        firstJudgeBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstJudgeBox1ActionPerformed(evt);
            }
        });
        scoringTab.add(firstJudgeBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 114, 101, 36));

        secondJudgeBox1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        secondJudgeBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        secondJudgeBox1.setEnabled(false);
        secondJudgeBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondJudgeBox1ActionPerformed(evt);
            }
        });
        scoringTab.add(secondJudgeBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 172, 103, 36));

        thirdJudgeBox1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        thirdJudgeBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        thirdJudgeBox1.setEnabled(false);
        thirdJudgeBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdJudgeBox1ActionPerformed(evt);
            }
        });
        scoringTab.add(thirdJudgeBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 241, 105, 36));

        firstTotalSoFarLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        scoringTab.add(firstTotalSoFarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 220, 20));

        firstJudgeLabel1.setText("First Judge");
        scoringTab.add(firstJudgeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 127, -1, -1));

        secondJudgeLabel1.setText("Second Judge");
        scoringTab.add(secondJudgeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 185, -1, -1));

        thirdJudgeLabel1.setText("Third Judge");
        scoringTab.add(thirdJudgeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 254, -1, -1));

        secondDriverLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        secondDriverLabel.setText("Driver");
        scoringTab.add(secondDriverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 35, -1, -1));

        firstJudgeLabel2.setText("First Judge");
        scoringTab.add(firstJudgeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 140, -1, -1));

        secondJudgeLabel2.setText("Second Judge");
        scoringTab.add(secondJudgeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 197, -1, -1));

        thirdJudgeLabel2.setText("Third Judge");
        scoringTab.add(thirdJudgeLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 254, -1, -1));

        firstJudgeBox2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        firstJudgeBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        firstJudgeBox2.setEnabled(false);
        firstJudgeBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstJudgeBox2ActionPerformed(evt);
            }
        });
        scoringTab.add(firstJudgeBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 130, 101, 36));

        secondJudgeBox2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        secondJudgeBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        secondJudgeBox2.setEnabled(false);
        secondJudgeBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondJudgeBox2ActionPerformed(evt);
            }
        });
        scoringTab.add(secondJudgeBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 103, 36));

        thirdJudgeBox2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        thirdJudgeBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        thirdJudgeBox2.setEnabled(false);
        thirdJudgeBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdJudgeBox2ActionPerformed(evt);
            }
        });
        scoringTab.add(thirdJudgeBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 250, 105, 36));

        secondDriverButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        secondDriverButton.setText("Load Driver");
        secondDriverButton.setEnabled(false);
        secondDriverButton.setFocusable(false);
        secondDriverButton.setPreferredSize(new java.awt.Dimension(166, 50));
        secondDriverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondDriverButtonActionPerformed(evt);
            }
        });
        scoringTab.add(secondDriverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 450, 237, 53));

        secondDriverBox.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        secondDriverBox.setPreferredSize(new java.awt.Dimension(179, 40));
        secondDriverBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondDriverBoxActionPerformed(evt);
            }
        });
        scoringTab.add(secondDriverBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 75, 50));

        secondTotalSoFarLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        scoringTab.add(secondTotalSoFarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, 240, 20));

        addLapScoreButton2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        addLapScoreButton2.setText("Add Lap Score");
        addLapScoreButton2.setEnabled(false);
        addLapScoreButton2.setPreferredSize(new java.awt.Dimension(168, 50));
        addLapScoreButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLapScoreButton2ActionPerformed(evt);
            }
        });
        scoringTab.add(addLapScoreButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));

        tabs.addTab("Scoring", scoringTab);

        qualifiedDriversTab.setBackground(new java.awt.Color(153, 153, 153));
        qualifiedDriversTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        qualifiedDriversScroller.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        qualifiedDriversOutput.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        qualifiedDriversScroller.setViewportView(qualifiedDriversOutput);

        qualifiedDriversTab.add(qualifiedDriversScroller, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 430, 660));

        getQualifiedDriversButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        getQualifiedDriversButton.setText("Get Qualifed Drivers");
        getQualifiedDriversButton.setPreferredSize(new java.awt.Dimension(97, 60));
        getQualifiedDriversButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getQualifiedDriversButtonActionPerformed(evt);
            }
        });
        qualifiedDriversTab.add(getQualifiedDriversButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, 270, -1));

        tabs.addTab("Qualified Drivers", qualifiedDriversTab);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1045, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carInfoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carInfoBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carInfoBoxActionPerformed

    private void driverNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driverNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_driverNameBoxActionPerformed

    
    private String validateAddDriverFormData() {
        String val = "";

        if (driverNameBox.getText() == null) {
            val += "Driver's name cannot be blank. \n\n";
        }

        if (driverNoBox.getText() == null) {
                val += "Driver's number cannot be blank. \n\n";
        }

        try {
            int i = Integer.parseInt(driverNoBox.getText());
                	
        } catch (NumberFormatException nfe) {
            val += "Driver's number must be in numeric format.";
            return val;
        }

        for (Racecar car : theMainEvent.getAllDriversSoFar()) {
                if(car.getDriver().equals(driverNameBox.getText())) {
                    val += "That name is taken. \n";

                }

                if(car.getDriverNumber() == Integer.parseInt(driverNoBox.getText())) {
                    val += "That number is taken.";                
                }
            }

        return val;
    }
    
    private void updateDriverListTextBox() {
        String[] cars = new String[theMainEvent.getMaxDrivers()];
        int i = 0;
        for (Racecar car : theMainEvent.getAllDriversSoFar()) {
            cars[i] = car.toString();
            i++;
        }
        
        driverListTextPanel.setListData(cars);
    }
    
    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        int maxDrivers = 40;
        int j;
      
       
        //make sure you test this thoroughly.
        
        try {
            j = Integer.parseInt(maxDriversBox.getText());
                maxDrivers = j;
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Please enter a number" );
        }
        
        
        
            theMainEvent = new CapD(maxDrivers);
            displayMaxDriversLabel.setText(theMainEvent.getMaxDrivers() + "");
            eventRunningLabel.setText("Event in progress.");
            changeMaxDriversButton.setEnabled(true);  //allow changing the maxDrivers
            addDriverButton.setEnabled(true);  //allow driver registration
            StartButton.setEnabled(false); //disallow restarting the event


    }//GEN-LAST:event_StartButtonActionPerformed

    private void maxDriversBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxDriversBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxDriversBoxActionPerformed

    private void changeMaxDriversButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeMaxDriversButtonActionPerformed
        int newMax;
        
        try {     
            newMax = Integer.parseInt(maxDriversBox.getText());

            theMainEvent.setMaxDrivers(newMax);   
            displayMaxDriversLabel.setText(theMainEvent.getMaxDrivers() + "");
            
            if (newMax < theMainEvent.driversSoFar()) {
                addDriverButton.setEnabled(false);
            } else {
                addDriverButton.setEnabled(true);
            }
        
            
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Please enter a number." );
        }
        
        
    }//GEN-LAST:event_changeMaxDriversButtonActionPerformed

    private boolean checkForConflict(int driverNo) {
        Racecar check = theMainEvent.getCar(driverNo);
        
        if (check == null) {
            return true;
        }
        
        if (firstDriver == check) {
            return false;
        }
        
        if (secondDriver == check) {
            return false;
        }
        
        return true;
    }
    
    private void firstDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstDriverButtonActionPerformed
        int driverNo = -1;
        try {
            driverNo = Integer.parseInt(firstDriverBox.getText());
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Numerical input please.");
           
        }
        
        if (! checkForConflict(driverNo)) {
           JOptionPane.showMessageDialog(this, "That driver is already selected.");
           return;
        }
        
        try {
            firstDriver = theMainEvent.getCar(driverNo);
            
            
            
            firstDriverLabel.setText("Current Driver: " + firstDriver.toString());
            aScore = new Score();
            addLapScoreButton1.setEnabled(true);
            enableScoreBoxes(1);
        
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Driver not found.");
        }
        
    }//GEN-LAST:event_firstDriverButtonActionPerformed


    private void enableScoreBoxes(int which) {
        switch (which) {
            case 1:
                for (JComboBox box : scoreBoxes1) {
                    box.setEnabled(true);
                }
                break;
            case 2:
                for (JComboBox box : scoreBoxes2) {
                    box.setEnabled(true);
                }
                break;
            default:
                break;
        }
        
    }
            
    /** for example only **/
    
    private void scoreBoxChanged(int which) {
        int sum = 0;

        switch (which){
            case 1:
                for (JComboBox box : scoreBoxes1) {
                        sum += box.getSelectedIndex();
                    }

                firstTotalSoFarLabel.setText("Points this lap: " + sum);
                break;
                
           case 2:
                for (JComboBox box : scoreBoxes2) {
                        sum += box.getSelectedIndex();
                    }

                secondTotalSoFarLabel.setText("Points this lap: " + sum);
                break;
        }
    }
    
    private void driverNoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driverNoBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_driverNoBoxActionPerformed

    private void firstDriverBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstDriverBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstDriverBoxActionPerformed

    private void addLapScoreButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLapScoreButton1ActionPerformed
        int sum = 0;
        
        for (JComboBox box : scoreBoxes1) {
            sum = sum + box.getSelectedIndex();
            box.setSelectedIndex(0); 
        }
        
        aScore.addLapScore(sum);
        
        if (aScore.getLapCount() == 1) {
            firstDriverLabel.setText(firstDriver.toString() + " - Waiting for second lap.");
        }
        
        if (aScore.getLapCount() == 2) {
            firstDriver.setScore(aScore);
            firstDriverLabel.setText(firstDriver.toString("x"));
            System.out.println(aScore.getQualificationScore());

            System.out.println(firstDriver.getQualificationScore());

        }

        getQualifiedDriversButton.setEnabled(true);
    }//GEN-LAST:event_addLapScoreButton1ActionPerformed

    private void firstJudgeBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstJudgeBox1ActionPerformed
        scoreBoxChanged(1);
    }//GEN-LAST:event_firstJudgeBox1ActionPerformed

    private void secondJudgeBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondJudgeBox1ActionPerformed
        scoreBoxChanged(1);
    }//GEN-LAST:event_secondJudgeBox1ActionPerformed

    private void thirdJudgeBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdJudgeBox1ActionPerformed
        scoreBoxChanged(1);
    }//GEN-LAST:event_thirdJudgeBox1ActionPerformed

    private void getQualifiedDriversButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getQualifiedDriversButtonActionPerformed
        
        //should work now, needs testing
        qualifiedDriversOutput.setText("");
        String outputString = "";
     
        outputString = theMainEvent.otherToString();
        
        qualifiedDriversOutput.setText(outputString);
        getQualifiedDriversButton.setEnabled(false);
    }//GEN-LAST:event_getQualifiedDriversButtonActionPerformed

    private void removeDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDriverButtonActionPerformed
        try {
            theMainEvent.removeDriver(driverListTextPanel.getSelectedIndex() + 1); //possible off by one error
            updateDriverListTextBox();
            
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "No driver selected.");
        }
        
        
    }//GEN-LAST:event_removeDriverButtonActionPerformed

    private void editDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDriverButtonActionPerformed
        Racecar editable = null;
        try {
            editable = theMainEvent.getRemovedDriver(driverListTextPanel.getSelectedIndex() + 1); //possible off by one error
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "No driver selected.");
        }

        
        driverNameBox.setText(editable.getDriver());
        carInfoBox.setText(editable.getModel());
        driverNoBox.setText(editable.getDriverNumber() + "");
        
        addDriverButton.setText("Done Editing"); 
    }//GEN-LAST:event_editDriverButtonActionPerformed

    private void firstJudgeBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstJudgeBox2ActionPerformed
        scoreBoxChanged(2);
    }//GEN-LAST:event_firstJudgeBox2ActionPerformed

    private void secondJudgeBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondJudgeBox2ActionPerformed
        scoreBoxChanged(2);
    }//GEN-LAST:event_secondJudgeBox2ActionPerformed

    private void thirdJudgeBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirdJudgeBox2ActionPerformed
        scoreBoxChanged(2);
    }//GEN-LAST:event_thirdJudgeBox2ActionPerformed

    private void secondDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondDriverButtonActionPerformed
        int driverNo = -1;
        try {
            driverNo = Integer.parseInt(secondDriverBox.getText());
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Numerical input please.");
           
        }
        
        if (! checkForConflict(driverNo)) {
            JOptionPane.showMessageDialog(this, "That driver is already selected.");
            return;
        }
        
        
        try {
            secondDriver = theMainEvent.getCar(driverNo);
            secondDriverLabel.setText("Current Driver: " + secondDriver.toString());
            bScore = new Score();
            addLapScoreButton2.setEnabled(true);
            enableScoreBoxes(2);
        
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Driver not found.");
        }
    }//GEN-LAST:event_secondDriverButtonActionPerformed

    private void secondDriverBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondDriverBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondDriverBoxActionPerformed

    private void addLapScoreButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLapScoreButton2ActionPerformed
        int sum = 0;
        
        for (JComboBox box : scoreBoxes2) {
            sum = sum + box.getSelectedIndex();
            box.setSelectedIndex(0); 
        }
        
        bScore.addLapScore(sum);
        
        if (bScore.getLapCount() == 1) {
            secondDriverLabel.setText(secondDriver.toString() + " - Waiting for second lap.");
        }
        
        if (bScore.getLapCount() == 2) {
            secondDriver.setScore(bScore);
            secondDriverLabel.setText(secondDriver.toString("x"));
            System.out.println(bScore.getQualificationScore());

            System.out.println(secondDriver.getQualificationScore());

        }
        
        getQualifiedDriversButton.setEnabled(true);

    }//GEN-LAST:event_addLapScoreButton2ActionPerformed

    private void addDriverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDriverButtonActionPerformed
        
        String driverName;
        String modelInfo;
        int driverNo;
        
        String alert = validateAddDriverFormData();
        
        if (alert.length() > 1) {
            JOptionPane.showMessageDialog(this, alert);
            return;
        }
        
        //if everything is right, add the driver
        driverName = driverNameBox.getText();
        modelInfo = carInfoBox.getText();
        driverNo = Integer.parseInt(driverNoBox.getText());
        
        theMainEvent.registerCar(driverName, modelInfo, driverNo);
       
        updateDriverListTextBox();
        
        firstDriverButton.setEnabled(true);
        secondDriverButton.setEnabled(true);
        
        if (theMainEvent.driversSoFar() == theMainEvent.getMaxDrivers()) {
            addDriverButton.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Event is full!");
            addDriverButton.setEnabled(false);
        }
        
        removeDriverButton.setEnabled(true); 
        editDriverButton.setEnabled(true);
        
        driverNoBox.setText("");    //clear boxes so user doesn't have to delete old info
        driverNameBox.setText("");
        carInfoBox.setText("");
        
        addDriverButton.setText("Add Driver"); //this is in case the "Edit Driver" button has changed the text 
                                               //to "Done Editing".
    }//GEN-LAST:event_addDriverButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartButton;
    private javax.swing.JButton addDriverButton;
    private javax.swing.JButton addLapScoreButton1;
    private javax.swing.JButton addLapScoreButton2;
    private javax.swing.JTextField carInfoBox;
    private javax.swing.JLabel carInfoLabel;
    private javax.swing.JButton changeMaxDriversButton;
    private javax.swing.JLabel displayMaxDriversLabel;
    private javax.swing.JLabel driverListLabel;
    private javax.swing.JList driverListTextPanel;
    private javax.swing.JTextField driverNameBox;
    private javax.swing.JLabel driverNameLabel;
    private javax.swing.JTextField driverNoBox;
    private javax.swing.JLabel driverNoLabel;
    private javax.swing.JButton editDriverButton;
    private javax.swing.JPanel eventDataTab;
    private javax.swing.JLabel eventRunningLabel;
    private javax.swing.JTextField firstDriverBox;
    private javax.swing.JButton firstDriverButton;
    private javax.swing.JLabel firstDriverLabel;
    private javax.swing.JComboBox firstJudgeBox1;
    private javax.swing.JComboBox firstJudgeBox2;
    private javax.swing.JLabel firstJudgeLabel1;
    private javax.swing.JLabel firstJudgeLabel2;
    private javax.swing.JLabel firstTotalSoFarLabel;
    private javax.swing.JButton getQualifiedDriversButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxDriversBox;
    private javax.swing.JLabel maxDriversLabel;
    private javax.swing.JTextPane qualifiedDriversOutput;
    private javax.swing.JScrollPane qualifiedDriversScroller;
    private javax.swing.JPanel qualifiedDriversTab;
    private javax.swing.JPanel registrationTab;
    private javax.swing.JButton removeDriverButton;
    private javax.swing.JPanel scoringTab;
    private javax.swing.JTextField secondDriverBox;
    private javax.swing.JButton secondDriverButton;
    private javax.swing.JLabel secondDriverLabel;
    private javax.swing.JComboBox secondJudgeBox1;
    private javax.swing.JComboBox secondJudgeBox2;
    private javax.swing.JLabel secondJudgeLabel1;
    private javax.swing.JLabel secondJudgeLabel2;
    private javax.swing.JLabel secondTotalSoFarLabel;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JComboBox thirdJudgeBox1;
    private javax.swing.JComboBox thirdJudgeBox2;
    private javax.swing.JLabel thirdJudgeLabel1;
    private javax.swing.JLabel thirdJudgeLabel2;
    // End of variables declaration//GEN-END:variables

    
}
